name: Deploy VibeSheets

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  NODE_VERSION: 18

jobs:
  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    outputs:
      bucket-name: ${{ steps.terraform.outputs.bucket-name }}
      cloudfront-id: ${{ steps.terraform.outputs.cloudfront-id }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
        terraform_wrapper: false

    - name: Terraform Init
      working-directory: ./Backend/Terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: ./Backend/Terraform
      run: terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      working-directory: ./Backend/Terraform
      run: terraform apply -auto-approve

    - name: Get Terraform Outputs
      if: github.ref == 'refs/heads/main'
      id: terraform
      working-directory: ./Backend/Terraform
      run: |
        echo "bucket-name=$(terraform output -raw frontend_bucket_name)" >> $GITHUB_OUTPUT
        echo "cloudfront-id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT

  deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build React app
      run: npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to S3
      run: |
        aws s3 sync ./dist s3://${{ needs.terraform.outputs.bucket-name }} --delete --exact-timestamps

    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ needs.terraform.outputs.cloudfront-id }} --paths "/*"