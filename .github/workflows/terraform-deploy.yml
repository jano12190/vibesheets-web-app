name: 🚀 Deploy Infrastructure

on:
  push:
    branches: [main, master]
    paths:
      - 'Backend/Terraform/**'
      - '.github/workflows/terraform-deploy.yml'
  pull_request:
    branches: [main, master]
    paths:
      - 'Backend/Terraform/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'prod'
        type: choice
        options:
          - prod
          - staging

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: 'us-east-1'

jobs:
  terraform-plan:
    name: 📋 Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Backend/Terraform
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 🎯 Terraform Format Check
        run: terraform fmt -check -recursive

      - name: 🚀 Terraform Init
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=vibesheets/terraform.tfstate" -backend-config="region=${{ env.AWS_REGION }}"

      - name: ✅ Terraform Validate
        run: terraform validate

      - name: 📊 Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -out=tfplan
        env:
          TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}

      - name: 💾 Upload Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: Backend/Terraform/tfplan
          retention-days: 7

  terraform-apply:
    name: 🏗️ Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: 
      name: production
      url: https://api.vibesheets.com
    defaults:
      run:
        working-directory: ./Backend/Terraform
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 🚀 Terraform Init
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=vibesheets/terraform.tfstate" -backend-config="region=${{ env.AWS_REGION }}"

      - name: 📥 Download Plan Artifact
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan
          path: Backend/Terraform/

      - name: 🎯 Terraform Apply
        run: terraform apply tfplan

      - name: 📋 Output Infrastructure Info
        run: |
          echo "### 🎉 Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**API Gateway URL:** $(terraform output -raw api_gateway_url)" >> $GITHUB_STEP_SUMMARY
          echo "**Domain:** $(terraform output -raw domain_name)" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** production" >> $GITHUB_STEP_SUMMARY

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Backend/Terraform
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 🚀 Terraform Init
        run: terraform init -backend=false

      - name: 🛡️ Run Checkov Security Scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: Backend/Terraform
          quiet: true
          soft_fail: false
          framework: terraform
          output_format: sarif
          output_file_path: reports/results.sarif

      - name: 📊 Upload Checkov Results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: reports/results.sarif